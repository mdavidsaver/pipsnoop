name: pipsnoop

on: [push, pull_request]

jobs:
  host:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        py: ['2.7', '3.7', '3.8', '3.9', '3.10', '3.11', '3.x']

    steps:
      - uses: actions/checkout@v3

      - name: Setup native python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py }}

      - name: Inspect default
        shell: bash
        run: |
          set -x
          type python
          python --version
          type pip
          pip --version
          pip debug --verbose

      - name: Update
        shell: bash
        run: pip install -U pip

      - name: Inspect default
        shell: bash
        run: |
          set -x
          type python
          python --version
          type pip
          pip --version
          pip debug --verbose

  manylinux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ml: # https://github.com/pypa/manylinux#docker-images
          - manylinux1_x86_64
          - manylinux_2_24_x86_64
          - manylinux2010_x86_64
          - manylinux2014_x86_64
          - manylinux_2_28_x86_64

    steps:
      - uses: actions/checkout@v3

      - name: Docker
        shell: bash
        run: |
          set -x
          # can't use GHA native docker support since GHA magic binaries need .so absent from old manylinux images :(
          cat <<EOF > runit.sh
          #!/bin/sh
          set -e -x
          cd /io
          ls /opt/python/*/bin
          for py in /opt/python/*/bin/python
          do
            \$py --version
            \$py -m pip --version
            \$py -m pip debug --verbose
          done
          EOF
          cat runit.sh
          chmod +x runit.sh
          docker pull quay.io/pypa/${{ matrix.ml }}
          docker run --rm -v `pwd`:/io quay.io/pypa/${{ matrix.ml }} /io/runit.sh

  docker:
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        image:
          - centos:7
          - almalinux:8
          - debian:10
          - debian:11
          - debian:testing
          - fedora:latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup
        shell: bash
        run: |
            set -e -x
            if type apt-get
            then
                apt-get -y update
                apt-get -y install python3-pip
                apt-get -y install python-pip || echo "No py2"
            elif type dnf
            then
                dnf -y install python3-pip
                dnf -y install python2-pip || echo "No py2"
            elif type yum
            then
                yum -y install epel-release || echo "No EPEL"
                yum -y install python3-pip || echo "No py3"
                yum -y install python2-pip || echo "No py2"
                yum -y install python-pip || echo "No py"
            else
                uname -a
                echo "What is this?"
                exit 1
            fi

      - name: Inspect
        shell: bash
        run: |
          set -x
          for exe in python python2 python3
          do
            if $exe --version
            then
              echo "::group::$exe"
              $exe -m pip --version || echo "Nope..."
              $exe -m pip debug --verbose \
              || $exe -c 'import pip.pep425tags; import pprint; pprint.pprint(pip.pep425tags.get_supported())' \
              || echo "Nope..."
              echo "::endgroup::"
            fi
          done
